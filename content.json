{"posts":[{"title":"htaccess 301 轉址","text":"利用mod_rewrite功能修改如下: 1234567891011# 以下兩行不可省略Options +FollowSymLinksRewriteEngine on# 將index.php 轉到 /RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\\ /.*index\\.php\\ HTTP/RewriteRule ^(.*)index\\.php$ /$1 [R=301,L]# 將沒有www 轉到有 wwwRewriteCond %{HTTP_HOST} ^domain.com [NC]RewriteRule ^(.*)$ http://www.domain.com/$1 [L,R=301]","link":"/301redirect/"},{"title":"Enable GZIP Compression in Apache","text":"編輯http.conf1vim /etc/httpd/conf/httpd.conf 檢查是否有載入以下模組 123LoadModule deflate_module modules/mod_deflate.soLoadModule headers_module modules/mod_headers.soLoadModule filter_module modules/mod_filter.so 編輯deflate.conf這個檔案預設應該是沒有，所以直接建立檔案 1vim /etc/httpd/conf.d/deflate.conf 複製貼上以下內容 123456789101112131415#Set to gzip all output SetOutputFilter DEFLATE #AddOutputFilterByType DEFLATE text/html text/css text/plain text/xml application/x-javascript application/x-httpd-php #exclude the following file types SetEnvIfNoCase Request_URI \\.(?:exe|t?gz|zip|iso|tar|bz2|sit|rar|png|jpg|gif|jpeg|flv|swf|mp3)$ no-gzip dont-vary #set compression level DeflateCompressionLevel 6 #Handle browser specific compression requirements BrowserMatch ^Mozilla/4 gzip-only-text/html BrowserMatch ^Mozilla/4.0[678] no-gzip BrowserMatch bMSIE !no-gzip !gzip-only-text/html SetEnvIf User-Agent &quot;.*MSIE.*&quot; nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0 說明：SetOutputFilter DEFLATE這行會把所有要輸出的檔案都壓縮，相反的你可以用AddOutputFilterByType DEFLATE後面加上指定的 MIME 類型的檔案，來指定只壓縮某些類型的檔案(這裡註解掉不使用)。 因為我們指定所有輸出的檔案都要壓縮，但其實有些檔案執行壓縮的效率不高，所以要排除，避免耗用太多 CPU，使用SetEnvIfNoCase Request_URI來把這些類型的檔案排除。 接著設定壓縮等級，等級從 1 到 9 級，數字越高，壓縮率越高，但 CPU 耗用的也越大，可以自行調整，預設是 6，不建議設太高，除非你伺服器的 CPU 閒閒沒事做。最後就是針對瀏覽器做個別調整。 重啟Apache Server1service httpd restart","link":"/ApacheEnableGZipCompression/"},{"title":"Hexo+GitHub Pages架設個人blog","text":"HexoHexo 是一個基於 Node.js 開發的網誌框架，具有下列幾項特點： 使用Markdown語法 一鍵部署，只需一個指令就能部署到GitHub Pages或Heroku等支援靜態網頁的空間 豐富的外掛套件，可安裝外掛支援Jade, CoffeeScript 輕量級，編輯速度快 支援多樣Theme 1. 前置作業安裝Node.jsNode.js官網下載安裝，安裝後用CMD檢查是否安裝成功 1node -v 1npm -v 安裝hexo-deployer-git1npm install hexo-deployer-git --save 安裝Hexo1npm install hexo-cli -g 2. Hexo環境建置初始化Hexo1hexo init [folder] 安裝所需套件切換到初始化完的Hexo資料夾，執行下列指令，安裝所需npm套件： 1npm install npm會根據 package.json 中設定，載入所有專案中所需套件模組 初始化與安裝完成後，進入資料夾會看到以下檔案和資料夾 12345678.+-- _config.yml+-- package.json+-- scaffolds+-- source| +-- _drafts| +-- _posts+-- themes 3. Hexo指令清除靜態檔案及快取(clean)清除db.json及public資料夾中已產生的靜態檔案 12hexo cleanhexo cl #簡寫 產生靜態檔案(generate)產生靜態檔案。此指令會建立public資料夾，所有靜態檔案都在此資料夾中 12hexo generatehexo g #簡寫 啟動伺服器(server)啟動Hexo伺服器 12hexo serverhexo s #簡寫 4. 將網站部署到GitHub新增Repository將repository命名為username.github.io (username請改為自己的帳號名稱)，下方設定都預設不需更動，最後按下Create repository按鈕。 修改_config.yml中的deploy設定 此處 _config.yml 是hexo根目錄的檔案，不是themes下的。 _config.yml 拉到最下方，可看到 deploy 區塊，修改內容如下： 1234deploy: type: git repo: https://github.com/username/username.github.io.git branch: master deploy到GitHub使用下面指令將檔案deploy到GitHub： 12hexo deployhexo d #簡寫 或是先清除快取 1hexo cl &amp;&amp; hexo d -g 5. 參考資料【學習筆記】如何使用 Hexo + GitHub Pages 架設個人網誌","link":"/Hexo-GitHub-Pages%E6%9E%B6%E8%A8%AD%E5%80%8B%E4%BA%BAblog/"},{"title":"Apache設定HSTS","text":"開啟apache headers模組 1sudo a2enmod headers 重新啟動apache server 1sudo service apache2 restart 設定/etc/apache2/conf-available/security.conf，加上 header 設定 1Header always set Strict-Transport-Security &quot;max-age=31536000;includeSubdomains; preload&quot; 重新載入設定 1sudo service apache2 reload 設定完成，可以試著用瀏覽器看一下 response header","link":"/Apache%E8%A8%AD%E5%AE%9AHSTS/"},{"title":"Reducing LDF file size","text":"1. 查詢’DBNAME_log’實際名稱1SELECT * FROM SYS.DATABASE_FILES 2. 將資料庫改成簡單(simple)模式1ALTER DATABASE DBNAME SET RECOVERY SIMPLE 3. SHRINKFILE123USE *DBNAME*GODBCC SHRINKFILE('DBNAME_log',2) SHRINKFILE語法12345678DBCC SHRINKFILE ( { file_name | file_id } { [ , EMPTYFILE ] | [ [ , target_size ] [ , { NOTRUNCATE | TRUNCATEONLY } ] ] } ) [ WITH NO_INFOMSGS ] 4. 將資料庫改回完整(FULL) 模式1ALTER DATABASE DBNAME SET RECOVERY FULL","link":"/Reducing-LDF-Size/"},{"title":"win-acme申請Let&#39;s Encrypt SSL","text":"1. 下載並解壓縮win-acme 至win-acme網站下載檔案，並解壓縮 2. 以系統管理員身分開啟「命令提示字元(CMD)」 3. 輸入N，按[Enter]，開始建立憑證申請 4. win-acme會掃描IIS內站台，並列出站台序號及名稱可依據自己需求，選擇要申請憑證的網域名稱，或直接按{Enter]選擇綁定所有IIS上的網域名稱。(這邊的例子是選擇單一站台，選擇A綁定所有) 5. 選定後，閱讀及同意服務條款 6. 輸入email，若要輸入多個email，用逗號區隔輸入email，按下[Enter]，程式就會自動執行憑證申請、新增憑證到IIS要綁定的站台，以及到期前自動更新的作業。 7. IIS管理員 → 伺服器憑證上面動作完成後，即可在IIS中看到憑證已自動綁定匯入 8. 瀏覽器檢查憑證是否生效","link":"/win-acme%E7%94%B3%E8%AB%8BLet'sEncryptSSL/"},{"title":"加速SSMS&#x2F;Visual Studio啟動速度","text":"捷徑後加 -nosplash","link":"/%E5%8A%A0%E9%80%9FSSMS-Visual-Studio%E5%95%9F%E5%8B%95%E9%80%9F%E5%BA%A6/"}],"tags":[{"name":"htaccess","slug":"htaccess","link":"/tags/htaccess/"},{"name":"Apache","slug":"Apache","link":"/tags/Apache/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"HSTS","slug":"HSTS","link":"/tags/HSTS/"},{"name":"MSSQL","slug":"MSSQL","link":"/tags/MSSQL/"},{"name":"IIS","slug":"IIS","link":"/tags/IIS/"},{"name":"SSL","slug":"SSL","link":"/tags/SSL/"},{"name":"SSMS","slug":"SSMS","link":"/tags/SSMS/"}],"categories":[{"name":"Apache","slug":"Apache","link":"/categories/Apache/"},{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"MSSQL","slug":"MSSQL","link":"/categories/MSSQL/"},{"name":"IIS","slug":"IIS","link":"/categories/IIS/"}],"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}]}